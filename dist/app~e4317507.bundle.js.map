{"version":3,"file":"app~e4317507.bundle.js","mappings":";gKAUA,QANe,CACb,IAAKA,EAAAA,EACL,cAAeC,EAAAA,EACf,WAAYC,EAAAA,mCCqBd,QA5BkB,CAChBC,2BAA0B,WACxB,IAAMC,EAAMC,OAAOC,SAASC,KAAKC,MAAM,GAAGC,cACpCC,EAAaC,KAAKC,aAAaR,GACrC,OAAOO,KAAKE,aAAaH,EAC3B,EAEAI,8BAA6B,WAC3B,IAAMV,EAAMC,OAAOC,SAASC,KAAKC,MAAM,GAAGC,cAC1C,OAAOE,KAAKC,aAAaR,EAC3B,EAEAQ,aAAY,SAAER,GACZ,IAAMW,EAAaX,EAAIY,MAAM,KAC7B,MAAO,CACLC,SAAUF,EAAW,IAAM,KAC3BG,GAAIH,EAAW,IAAM,KACrBI,KAAMJ,EAAW,IAAM,KAE3B,EAEAF,aAAY,SAAEH,GACZ,OAAQA,EAAWO,SAAW,IAAH,OAAOP,EAAWO,UAAa,MACzDP,EAAWQ,GAAK,OAAS,KACzBR,EAAWS,KAAO,IAAH,OAAOT,EAAWS,MAAS,GAC7C,mCCFF,QAvBwB,CACtBC,KAAI,YAA+B,WAA3BC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QACtBF,EAAOG,iBAAiB,SAAS,SAACC,GAChC,EAAKC,cAAcD,EAAOH,GAC1BG,EAAME,gBACR,IAEAJ,EAAQC,iBAAiB,SAAS,SAACC,GACjC,EAAKG,aAAaH,EAAOH,EAC3B,GACF,EAEAI,cAAa,SAAED,EAAOH,GACpBG,EAAMI,kBACNP,EAAOQ,UAAUC,OAAO,OAC1B,EAEAH,aAAY,SAAEH,EAAOH,GACnBG,EAAMI,kBACNP,EAAOQ,UAAUE,OAAO,OAC1B,mSCnBF,svNA8CA,QA7C4B,CACpBZ,KAAI,YAAkD,sHAGrB,OAHzBa,EAAmB,EAAnBA,oBAAqBC,EAAc,EAAdA,eAAgBC,EAAK,EAALA,MACjD,EAAKC,qBAAuBH,EAC5B,EAAKI,OAASF,EACd,EAAKG,gBAAkBJ,EAAc,SAE/B,EAAKK,gBAAe,0CALgC,EAM5D,EAEMA,cAAa,WAAI,kHACX,OAAFrB,EAAO,EAAKmB,OAAZnB,GAAE,SAEA,EAAKsB,cAActB,GAAG,kCAC9B,EAAKuB,eAAc,sBAEnB,EAAKC,cAAa,0CANC,EAQvB,EAEMF,cAAa,SAAEtB,GAAI,kIACH,EAAKoB,gBAAgBK,SAASzB,GAAG,OAA1C,OAALiB,EAAQ,EAAH,yBACFA,GAAK,0CAFS,EAGzB,EAEAO,YAAW,WAAI,WACb/B,KAAKyB,qBAAqBQ,WAAYC,EAAAA,EAAAA,MAEnBC,SAASC,cAAc,eAC/BvB,iBAAiB,QAAO,YAAE,8FAC7B,EAAKc,gBAAgBU,SAAS,EAAKX,QAAO,OAChD,EAAKE,gBAAe,2CAExB,EAEAE,aAAY,WAAI,WACd9B,KAAKyB,qBAAqBQ,WAAYK,EAAAA,EAAAA,MAEnBH,SAASC,cAAc,eAC/BvB,iBAAiB,QAAO,YAAE,8FAC7B,EAAKc,gBAAgBY,YAAY,EAAKb,OAAOnB,IAAG,OACtD,EAAKqB,gBAAe,2CAExB,mSC3CF,mjNAiBA,QAhBgB,eADhB,EACgB,GADhB,EACgB,UAAG,uFACX,kBAAmBY,UAAS,gBAC0B,OAA1DC,QAAQC,IAAI,+CAA8C,0BAIE,OAAxDC,EAAK,IAAIC,EAAAA,GAAsB,0BAAyB,kBAGtDD,EAAGE,WAAU,OACnBJ,QAAQC,IAAI,6BAA4B,kDAExCD,QAAQC,IAAI,oCAAqC,EAAF,IAAQ,yDAb3D,+KAeC,kBAde","sources":["webpack://restaurant-apps/./src/scripts/routes/routes.js","webpack://restaurant-apps/./src/scripts/routes/url-parser.js","webpack://restaurant-apps/./src/scripts/utils/drawer-initiator.js","webpack://restaurant-apps/./src/scripts/utils/like-button-presenter.js","webpack://restaurant-apps/./src/scripts/utils/sw-register.js"],"sourcesContent":["import ListResto from '../views/pages/list'\nimport Detail from '../views/pages/detail'\nimport Favorit from '../views/pages/favorit'\n\nconst routes = {\n  '/': ListResto, // default page\n  '/detail/:id': Detail,\n  '/favorit': Favorit\n}\n\nexport default routes\n","const UrlParser = {\n  parseActiveUrlWithCombiner () {\n    const url = window.location.hash.slice(1).toLowerCase()\n    const splitedUrl = this._urlSplitter(url)\n    return this._urlCombiner(splitedUrl)\n  },\n\n  parseActiveUrlWithoutCombiner () {\n    const url = window.location.hash.slice(1).toLowerCase()\n    return this._urlSplitter(url)\n  },\n\n  _urlSplitter (url) {\n    const urlsSplits = url.split('/')\n    return {\n      resource: urlsSplits[1] || null,\n      id: urlsSplits[2] || null,\n      verb: urlsSplits[3] || null\n    }\n  },\n\n  _urlCombiner (splitedUrl) {\n    return (splitedUrl.resource ? `/${splitedUrl.resource}` : '/') +\n    (splitedUrl.id ? '/:id' : '') +\n    (splitedUrl.verb ? `/${splitedUrl.verb}` : '')\n  }\n}\n\nexport default UrlParser\n","const DrawerInitiator = {\r\n  init ({ button, drawer, content }) {\r\n    button.addEventListener('click', (event) => {\r\n      this._toggleDrawer(event, drawer)\r\n      event.preventDefault()\r\n    })\r\n\r\n    content.addEventListener('click', (event) => {\r\n      this._closeDrawer(event, drawer)\r\n    })\r\n  },\r\n\r\n  _toggleDrawer (event, drawer) {\r\n    event.stopPropagation()\r\n    drawer.classList.toggle('open')\r\n  },\r\n\r\n  _closeDrawer (event, drawer) {\r\n    event.stopPropagation()\r\n    drawer.classList.remove('open')\r\n  }\r\n}\r\n\r\nexport default DrawerInitiator\r\n","import { createLikeButtonTemplate, createLikedButtonTemplate } from '../views/templates/template-creator'\r\n\r\nconst LikeButtonPresenter = {\r\n  async init ({ likeButtonContainer, favoriteRestos, resto }) {\r\n    this._likeButtonContainer = likeButtonContainer\r\n    this._resto = resto\r\n    this._favoriteRestos = favoriteRestos\r\n\r\n    await this._renderButton()\r\n  },\r\n\r\n  async _renderButton () {\r\n    const { id } = this._resto\r\n\r\n    if (await this._isRestoExist(id)) {\r\n      this._renderLiked()\r\n    } else {\r\n      this._renderLike()\r\n    }\r\n  },\r\n\r\n  async _isRestoExist (id) {\r\n    const resto = await this._favoriteRestos.getResto(id)\r\n    return !!resto\r\n  },\r\n\r\n  _renderLike () {\r\n    this._likeButtonContainer.innerHTML = createLikeButtonTemplate()\r\n\r\n    const likeButton = document.querySelector('#likeButton')\r\n    likeButton.addEventListener('click', async () => {\r\n      await this._favoriteRestos.putResto(this._resto)\r\n      this._renderButton()\r\n    })\r\n  },\r\n\r\n  _renderLiked () {\r\n    this._likeButtonContainer.innerHTML = createLikedButtonTemplate()\r\n\r\n    const likeButton = document.querySelector('#likeButton')\r\n    likeButton.addEventListener('click', async () => {\r\n      await this._favoriteRestos.deleteResto(this._resto.id)\r\n      this._renderButton()\r\n    })\r\n  }\r\n}\r\n\r\nexport default LikeButtonPresenter\r\n","import * as WorkboxWindow from 'workbox-window'\r\n\r\nconst swRegister = async () => {\r\n  if (!('serviceWorker' in navigator)) {\r\n    console.log('Service Worker not supported in the browser')\r\n    return\r\n  }\r\n\r\n  const wb = new WorkboxWindow.Workbox('./sw-workbox.bundle.js')\r\n\r\n  try {\r\n    await wb.register()\r\n    console.log('Service worker registered')\r\n  } catch (error) {\r\n    console.log('Failed to register service worker', error)\r\n  }\r\n}\r\n\r\nexport default swRegister\r\n"],"names":["ListResto","Detail","Favorit","parseActiveUrlWithCombiner","url","window","location","hash","slice","toLowerCase","splitedUrl","this","_urlSplitter","_urlCombiner","parseActiveUrlWithoutCombiner","urlsSplits","split","resource","id","verb","init","button","drawer","content","addEventListener","event","_toggleDrawer","preventDefault","_closeDrawer","stopPropagation","classList","toggle","remove","likeButtonContainer","favoriteRestos","resto","_likeButtonContainer","_resto","_favoriteRestos","_renderButton","_isRestoExist","_renderLiked","_renderLike","getResto","innerHTML","createLikeButtonTemplate","document","querySelector","putResto","createLikedButtonTemplate","deleteResto","navigator","console","log","wb","WorkboxWindow","register"],"sourceRoot":""}