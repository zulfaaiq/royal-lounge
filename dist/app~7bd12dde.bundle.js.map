{"version":3,"file":"app~7bd12dde.bundle.js","mappings":";0YACA,knGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEA,IAAQC,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAAEC,GACPA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IAkCF,QA/ByB,CACjBC,SAAQ,SAAEC,GAAI,oGACbA,EAAI,CAAF,gEAGOP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAJhC,EAKpB,EACME,aAAY,WAAI,iHACNT,EAAS,uCAAEU,OAAOX,IAAiB,0CAD7B,EAEtB,EACMY,SAAQ,SAAEC,GAAO,oGAEhBA,EAAMC,eAAe,MAAO,CAAF,gEAGjBb,EAAS,uCAAEc,IAAIf,EAAmBa,IAAK,0CALhC,EAMvB,EACMG,YAAW,SAAER,GAAI,iHACPP,EAAS,8CAASD,EAAmBQ,IAAE,0CADhC,EAEvB,EACMS,aAAY,SAAEC,GAAO,4HACX,EAAKR,eAAc,uCAAES,QAAO,SAACN,GACzC,IACMO,GADyBP,EAAMQ,OAAS,KAAKC,cACJC,QAAQ,MAAO,IAExDC,EADmBN,EAAMI,cACMC,QAAQ,MAAO,IACpD,OAAkD,IAA3CH,EAAiBK,QAAQD,EAClC,KAAC,0CAPwB,EAQ3B,gDC/BF,QANqB,CACnBE,WAAY,GAAF,OAAK5B,EAAAA,EAAAA,SAAe,QAC9B6B,OAAQ,SAACnB,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,kBAAUU,EAAE,EAC9CoB,YAAa,GAAF,OAAK9B,EAAAA,EAAAA,SAAe,8PCJjC,45NAeA,QAdsB,yBADtB,4FACsB,SADtB,QAMG,EALmB,EAWnB,OAZH,EACsB,OADtB,EACsB,uCACpB,sGACyB+B,MAAMC,EAAAA,YAAwB,OAAvC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,qFAED,WAA0B1B,GAAE,yFACHqB,MAAMC,EAAAA,OAAoBtB,IAAI,OAAvC,OAARuB,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaE,YAAU,2CAC/B,+CAZH,6DAYG,EAXmB,mCCQtB,QAVe,CACbC,IAAK,QACLC,SAAU,uCACVC,eAAgB,oDAChBC,WAAY,iBACZ1C,cAAe,wBACfE,iBAAkB,EAClBC,kBAAmB,gFCCfwC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,oBAC/BC,OAAQF,SAASC,cAAc,WAC/BE,QAASH,SAASC,cAAc,kBAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-resto-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/therestodb-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import { openDB } from 'idb'\r\nimport CONFIG from '../globals/config'\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade (database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' })\r\n  }\r\n})\r\n\r\nconst FavoriteRestoIdb = {\r\n  async getResto (id) {\r\n    if (!id) {\r\n      return\r\n    }\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id)\r\n  },\r\n  async getAllRestos () {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME)\r\n  },\r\n  async putResto (resto) {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (!resto.hasOwnProperty('id')) {\r\n      return\r\n    }\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, resto)\r\n  },\r\n  async deleteResto (id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id)\r\n  },\r\n  async searchRestos (query) {\r\n    return (await this.getAllRestos()).filter((resto) => {\r\n      const loweredCaseRestoTitle = (resto.title || '-').toLowerCase()\r\n      const jammedRestoTitle = loweredCaseRestoTitle.replace(/\\s/g, '')\r\n      const loweredCaseQuery = query.toLowerCase()\r\n      const jammedQuery = loweredCaseQuery.replace(/\\s/g, '')\r\n      return jammedRestoTitle.indexOf(jammedQuery) !== -1\r\n    })\r\n  }\r\n}\r\n\r\nexport default FavoriteRestoIdb\r\n","import CONFIG from './config'\r\n\r\nconst API_ENDPOINT = {\r\n  LIST_RESTO: `${CONFIG.BASE_URL}list`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n  POST_REVIEW: `${CONFIG.BASE_URL}review`\r\n}\r\n\r\nexport default API_ENDPOINT\r\n","import API_ENDPOINT from '../globals/api-endpoint'\r\n\r\nclass TheRestoDbSource {\r\n  static async listResto () {\r\n    const response = await fetch(API_ENDPOINT.LIST_RESTO)\r\n    const responseJson = await response.json()\r\n    return responseJson.restaurants\r\n  }\r\n\r\n  static async detailResto (id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id))\r\n    const responseJson = await response.json()\r\n    return responseJson.restaurant\r\n  }\r\n}\r\n\r\nexport default TheRestoDbSource\r\n","const CONFIG = {\r\n  KEY: '12345',\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/large/',\r\n  CACHE_NAME: 'RoyalLounge-V1',\r\n  DATABASE_NAME: 'royal-lounge-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restos'\r\n}\r\n\r\nexport default CONFIG\r\n","import 'lazysizes'\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit'\nimport 'regenerator-runtime'\nimport '../styles/main.css'\nimport '../styles/responsive.css'\nimport App from './views/app'\nimport swRegister from './utils/sw-register'\n\nconst app = new App({\n  button: document.querySelector('#hamburgerButton'),\n  drawer: document.querySelector('#drawer'),\n  content: document.querySelector('#maincontent')\n})\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage()\n})\n\nwindow.addEventListener('load', () => {\n  app.renderPage()\n  swRegister()\n})\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getResto","id","get","getAllRestos","getAll","putResto","resto","hasOwnProperty","put","deleteResto","searchRestos","query","filter","jammedRestoTitle","title","toLowerCase","replace","jammedQuery","indexOf","LIST_RESTO","DETAIL","POST_REVIEW","fetch","API_ENDPOINT","response","json","responseJson","restaurants","restaurant","KEY","BASE_URL","BASE_IMAGE_URL","CACHE_NAME","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}